package AmazonOA;

/**
 * 
 * golf event要砍树题 
 * 给你一个2D array 1 可以走0 不能走  >1代表树 数要从最小的开始砍 最后回传从原点走到每一棵树的步数加总.
 * 
 * 方法就是先找到所有树的位置用map存起来再用bfs从一个树一个树的走 加总所有步树就是答案
 * 
 * *
 * 
 * golf球场修场地。
 * public int flatFields (int numRows, int numColumns, List<List<Integer>> fields) {}
 * 让小明帮公司球场修场地，给一个二维的链表fields，场地里有坑，不能走。 场地里有树要砍掉。最后目的返回是修好一层的场地的最小步数。
 * Ex1:
 * [
 * [1, 3, 0, 2].鐣欏璁哄潧-涓€浜�-涓夊垎鍦�
 * [1, 1, 3, 1]
 * ]
 * 上图中的1代表平地，可以走。 0代表坑，不能走。 大于1的数字代表树木，需要砍掉。规则是从上下左右四个角开始任选一个开始走，先砍数字小的树木。 比如2 < 3，那么就得先走2。
 * 上图如果从右下角开始走依次经过的坐标是： （1， 3） -> (0, 3) -> (1, 3) -> (1, 2) -> (1, 1) -> (1, 0) 所以返回的最小步数是5， 因为通过这个路径可以修平第二层的球场[1, 1, 3, 1]， 并且走到左下角终点。
 * Ex2:
 * [
 * [1, 0]
 * [3, 2]
 * ]
 * 上图中的最小步数返回-1因为，没有办法修好一层， 因为从左上角1开始走，不能走到0， 也不能走3， 因为在全局中3比2大，必须先走2。所以就没法走了。
 * 
 * @author Shengyi
 *
 */

public class GolfEvent {

}
